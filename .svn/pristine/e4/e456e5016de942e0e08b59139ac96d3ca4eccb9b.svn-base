<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qy.mapper.InfoTypeMapper">
  <resultMap id="BaseResultMap" type="com.qy.entity.InfoType">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="type_id" jdbcType="VARCHAR" property="typeId" />
    <result column="type_name" jdbcType="VARCHAR" property="typeName" />
    <result column="type_name_en" jdbcType="VARCHAR" property="typeNameEn" />
    <result column="parent_type_id" jdbcType="VARCHAR" property="parentTypeId" />
    <result column="parent_type_name" jdbcType="VARCHAR" property="parentTypeName" />
    <result column="order" jdbcType="INTEGER" property="order" />
    <result column="keywords" jdbcType="VARCHAR" property="keywords" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="creater_en" jdbcType="VARCHAR" property="createrEn" />
    <result column="creater_cn" jdbcType="VARCHAR" property="createrCn" />
    <result column="create_date" jdbcType="DATE" property="createDate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, type_id, type_name, type_name_en, parent_type_id, parent_type_name, order, keywords, 
    remark, creater_en, creater_cn, create_date
  </sql>
  <select id="selectByExample" parameterType="com.qy.entity.InfoTypeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from info_type
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from info_type
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from info_type
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.qy.entity.InfoTypeExample">
    delete from info_type
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.qy.entity.InfoType">
    insert into info_type (id, type_id, type_name, 
      type_name_en, parent_type_id, parent_type_name, 
      order, keywords, remark, 
      creater_en, creater_cn, create_date
      )
    values (#{id,jdbcType=INTEGER}, #{typeId,jdbcType=VARCHAR}, #{typeName,jdbcType=VARCHAR}, 
      #{typeNameEn,jdbcType=VARCHAR}, #{parentTypeId,jdbcType=VARCHAR}, #{parentTypeName,jdbcType=VARCHAR}, 
      #{order,jdbcType=INTEGER}, #{keywords,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, 
      #{createrEn,jdbcType=VARCHAR}, #{createrCn,jdbcType=VARCHAR}, #{createDate,jdbcType=DATE}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.qy.entity.InfoType">
    insert into info_type
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="typeId != null">
        type_id,
      </if>
      <if test="typeName != null">
        type_name,
      </if>
      <if test="typeNameEn != null">
        type_name_en,
      </if>
      <if test="parentTypeId != null">
        parent_type_id,
      </if>
      <if test="parentTypeName != null">
        parent_type_name,
      </if>
      <if test="order != null">
        order,
      </if>
      <if test="keywords != null">
        keywords,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="createrEn != null">
        creater_en,
      </if>
      <if test="createrCn != null">
        creater_cn,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="typeId != null">
        #{typeId,jdbcType=VARCHAR},
      </if>
      <if test="typeName != null">
        #{typeName,jdbcType=VARCHAR},
      </if>
      <if test="typeNameEn != null">
        #{typeNameEn,jdbcType=VARCHAR},
      </if>
      <if test="parentTypeId != null">
        #{parentTypeId,jdbcType=VARCHAR},
      </if>
      <if test="parentTypeName != null">
        #{parentTypeName,jdbcType=VARCHAR},
      </if>
      <if test="order != null">
        #{order,jdbcType=INTEGER},
      </if>
      <if test="keywords != null">
        #{keywords,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createrEn != null">
        #{createrEn,jdbcType=VARCHAR},
      </if>
      <if test="createrCn != null">
        #{createrCn,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=DATE},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.qy.entity.InfoTypeExample" resultType="java.lang.Long">
    select count(*) from info_type
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update info_type
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.typeId != null">
        type_id = #{record.typeId,jdbcType=VARCHAR},
      </if>
      <if test="record.typeName != null">
        type_name = #{record.typeName,jdbcType=VARCHAR},
      </if>
      <if test="record.typeNameEn != null">
        type_name_en = #{record.typeNameEn,jdbcType=VARCHAR},
      </if>
      <if test="record.parentTypeId != null">
        parent_type_id = #{record.parentTypeId,jdbcType=VARCHAR},
      </if>
      <if test="record.parentTypeName != null">
        parent_type_name = #{record.parentTypeName,jdbcType=VARCHAR},
      </if>
      <if test="record.order != null">
        order = #{record.order,jdbcType=INTEGER},
      </if>
      <if test="record.keywords != null">
        keywords = #{record.keywords,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.createrEn != null">
        creater_en = #{record.createrEn,jdbcType=VARCHAR},
      </if>
      <if test="record.createrCn != null">
        creater_cn = #{record.createrCn,jdbcType=VARCHAR},
      </if>
      <if test="record.createDate != null">
        create_date = #{record.createDate,jdbcType=DATE},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update info_type
    set id = #{record.id,jdbcType=INTEGER},
      type_id = #{record.typeId,jdbcType=VARCHAR},
      type_name = #{record.typeName,jdbcType=VARCHAR},
      type_name_en = #{record.typeNameEn,jdbcType=VARCHAR},
      parent_type_id = #{record.parentTypeId,jdbcType=VARCHAR},
      parent_type_name = #{record.parentTypeName,jdbcType=VARCHAR},
      order = #{record.order,jdbcType=INTEGER},
      keywords = #{record.keywords,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR},
      creater_en = #{record.createrEn,jdbcType=VARCHAR},
      creater_cn = #{record.createrCn,jdbcType=VARCHAR},
      create_date = #{record.createDate,jdbcType=DATE}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.qy.entity.InfoType">
    update info_type
    <set>
      <if test="typeId != null">
        type_id = #{typeId,jdbcType=VARCHAR},
      </if>
      <if test="typeName != null">
        type_name = #{typeName,jdbcType=VARCHAR},
      </if>
      <if test="typeNameEn != null">
        type_name_en = #{typeNameEn,jdbcType=VARCHAR},
      </if>
      <if test="parentTypeId != null">
        parent_type_id = #{parentTypeId,jdbcType=VARCHAR},
      </if>
      <if test="parentTypeName != null">
        parent_type_name = #{parentTypeName,jdbcType=VARCHAR},
      </if>
      <if test="order != null">
        order = #{order,jdbcType=INTEGER},
      </if>
      <if test="keywords != null">
        keywords = #{keywords,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createrEn != null">
        creater_en = #{createrEn,jdbcType=VARCHAR},
      </if>
      <if test="createrCn != null">
        creater_cn = #{createrCn,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=DATE},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qy.entity.InfoType">
    update info_type
    set type_id = #{typeId,jdbcType=VARCHAR},
      type_name = #{typeName,jdbcType=VARCHAR},
      type_name_en = #{typeNameEn,jdbcType=VARCHAR},
      parent_type_id = #{parentTypeId,jdbcType=VARCHAR},
      parent_type_name = #{parentTypeName,jdbcType=VARCHAR},
      order = #{order,jdbcType=INTEGER},
      keywords = #{keywords,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      creater_en = #{createrEn,jdbcType=VARCHAR},
      creater_cn = #{createrCn,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=DATE}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>